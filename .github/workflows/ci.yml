name: "git action - ecr - ecs"
on:
  push:
    branches:
      - python_docker_dev  # Trigger for dev deployments
  pull_request:
    branches:
      - pythonstage  # Trigger stage deployment on PR to stage
      - pythonprod   # Trigger prod deployment on PR to prod from stage
    types: [closed]  # Only trigger after PR is merged
permissions:
      id-token: write # This is required for aws oidc connection
      contents: read # This is required for actions/checkout
env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPO: ${{ secrets.ECR_REPO }}
jobs:
  deploy:
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - name: Git checkout
        uses: actions/checkout@v4.1.7

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEV_GITHUB_ACTION_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/${{ secrets.ECR_REPO }}:$IMAGE_TAG .
          docker push $ECR_REGISTRY/${{ secrets.ECR_REPO }}:$IMAGE_TAG
          echo "ECR_IMAGE=$ECR_REGISTRY/${{ secrets.ECR_REPO }}:$IMAGE_TAG" >> $GITHUB_ENV
       
